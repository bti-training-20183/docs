version: '3.3'

services:
  rabbitmq: 
    image: rabbitmq:management
    hostname: "rabbitmq"
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    logging:
      driver: none
  minio:
    image: minio/minio
    hostname: "minio"
    volumes:
      - ./minio-data:/data
    ports:
      - "9000:9000"
    environment:
      MINIO_ACCESS_KEY: "Q3AM3UQ867SPQQA43P2F"
      MINIO_SECRET_KEY: "zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG"
    command: server /data
  model-preprocess:
    build: ./model-preprocess
    volumes:
      - ./model-preprocess:/app
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_CONNECTION: 'rabbitmq'
      PYTHONUNBUFFERED: 1
  model-create:
    build: ./model-create
    volumes:
      - ./model-create:/app
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_CONNECTION: 'rabbitmq'
      PYTHONUNBUFFERED: 1
  model-deploy:
    build: ./model-deploy
    volumes:
     - ./model-deploy:/app
    links:
      - rabbitmq
      - minio
    depends_on:
      - rabbitmq
      - minio
    environment:
      RABBITMQ_CONNECTION: 'rabbitmq'
      PYTHONUNBUFFERED: 1
  server-api:
    build: ./server-api
    volumes:
      - ./server-api:/app
    ports:
      - "8000:8000"
    links:
      - rabbitmq
    depends_on:
      - rabbitmq
    environment:
      RABBITMQ_CONNECTION: 'rabbitmq'
      PYTHONUNBUFFERED: 1
  frontend:
    build: ./frontend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - HOST=0.0.0.0
    ports:
      - "3000:3000"
    links:
      - server-api
    depends_on:
      - server-api
      