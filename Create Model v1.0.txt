title Model Handler
participant Client/Frontend (Nuxt JS)
participant RabbitMQ
participantgroup #lightblue Server Model
participant Model API (Flask)
participant Data Preprocess
participant Model Handler
end
participantgroup #lightgreen Database
participant Mongo
end
participantgroup #yellow Datastore
participant Minio
end
Client/Frontend (Nuxt JS)->Model API (Flask): Upload Data (txt/csv,..)
Model API (Flask)->Minio: Save Raw Data
Model API (Flask)->Mongo: Save Logs
Model API (Flask)->RabbitMQ: Send Message: Data Received
RabbitMQ ->Data Preprocess: On Message: Data Received
Data Preprocess->Minio: Download Raw Data
Minio-->Data Preprocess: Raw Data
Data Preprocess->(2)Data Preprocess: Data Processing
Data Preprocess -> Minio: Upload Preprocessed Data
Data Preprocess ->Mongo: Save Logs
Data Preprocess ->RabbitMQ: Send Message: Data Preprocessing Finished
RabbitMQ->Model Handler: On Message: Data Preprocessing Finished. Create Model
Model Handler->(2)Model Handler:Creating Model
Model Handler ->Minio: Save Model
Model Handler ->Mongo: Save Logs
Model Handler ->RabbitMQ: Send Message: Model Created & Updated
RabbitMQ->Model API (Flask): On Message: Model Updated. Call hook
Model API (Flask)->Client/Frontend (Nuxt JS): Return Model to View